name: data-programming

conda_env: conda.yaml

entry_points:
    example:
        parameters:
            train_data: path
            task: {type: string, default: multiclass}
            dev_data: {type: int, default: 0}
            filter: {type: int, default: 1}
            n_epochs: {type: int, default: 1000}
            optimizer: {type: string, default: sgd}
            prec_init: {type: float, default: 0.7}
            seed: {type: int, default: 0}
            parallel: {type: int, default: 0}
            device: {type: string, default: cpu}
            verbose: {type: int, default: 1}
        command: "python ./label/example.py
        --task {task}
        --dev_data {dev_data}
        --filter {filter}
        --n_epochs {n_epochs}
        --optimizer {optimizer}
        --prec_init {prec_init}
        --seed {seed}
        --parallel {parallel}
        --device {device}
        --verbose {verbose}
        {train_data}
        "
    framing:
        parameters:
            train_data: path
            task: {type: string, default: multiclass}
            dev_data: {type: int, default: 0}
            filter: {type: int, default: 1}
            n_epochs: {type: int, default: 1000}
            optimizer: {type: string, default: sgd}
            prec_init: {type: float, default: 0.7}
            seed: {type: int, default: 0}
            parallel: {type: int, default: 0}
            device: {type: string, default: cuda}
            trld: {type: float, default: 0.5}
            encoder: {type: str, default: mpnet}
        command: "python ./label/framing.py
        --task {task}
        --dev_data {dev_data}
        --filter {filter}
        --n_epochs {n_epochs}
        --optimizer {optimizer}
        --prec_init {prec_init}
        --seed {seed}
        --parallel {parallel}
        --device {device}
        --trld {trld}
        --encoder {encoder}
        {train_data}
        "
